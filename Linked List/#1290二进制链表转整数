给你一个单链表的引用结点 head。链表中每个结点的值不是 0 就是 1。已知此链表是一个整数数字的二进制表示形式。
请你返回该链表所表示数字的 十进制值 。


解题思路：在百度搜到了一种常规的算法就是将每一位二进制数与其位权相乘，然后相加便得到了相应的十进制数。
https://jingyan.baidu.com/article/e75057f2355739ebc81a894c.html

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        int length = 0;
        for(ListNode p = head; p.next != null; p = p.next) length++;  //遍历一次获取数组的长度，同时获取到头结点的权位
        int result = 0;                                                //返回结果
        while(length >= 0){
            result += head.val * convert(length);                       //从头结点开始把二进制数与权位相乘
            head = head.next;
            length--;
        }
        return result;
    }

    public int convert(int length){                                     //计算相应的权位，由于使用了递归这个步骤比较消耗内存
        int sum = 2;
        return length > 0 ? sum * convert(length -1) : 1;
    }
}


执行用时 :0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗 :37.4 MB, 在所有 Java 提交中击败了5.07%的用户

