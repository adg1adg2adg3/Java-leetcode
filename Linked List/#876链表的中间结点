给定一个带有头结点 head 的非空单链表，返回链表的中间结点。
如果有两个中间结点，则返回第二个中间结点。

解题思路：一个简单想法，把链表存在数组中（链表长度不超过100），在数组中直接确定链表的中间节点然后返回即可。

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode[] a = new ListNode[100];
        int length = 0;
        while(head != null){
            a[length] = head;
            head = head.next;
            length++;
        }
        return a[length / 2];
    }
}

执行用时 :0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗 :36.8 MB, 在所有 Java 提交中击败了5.08%的用户
